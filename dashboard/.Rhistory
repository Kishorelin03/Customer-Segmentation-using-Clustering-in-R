install.packages(c("tidyverse", "caret", "cluster", "factoextra", "ggplot2", "dplyr"))
# Encode Verified.Account to 0/1
data_clean$Verified <- ifelse(data_clean$Verified.Account == "Yes", 1, 0)
# Normalize Daily Time Spent
data_clean$TimeSpent_Scaled <- scale(data_clean$Daily.Time.Spent..min.)
library(tidyverse)
library(lubridate)
library(tidyverse)
library(lubridate)
library(lubridate)
library(tidyverse)
data <- read.csv("../data/social_media_users.csv", stringsAsFactors = FALSE)
# Read the dataset
data <- read.csv("~/Downloads/co-op/Projects/CustomerSegmentationR/data/social_media_users.csv", stringsAsFactors = FALSE)
data <- read.csv("~/Downloads/co-op/Projects/CustomerSegmentationR/data/social_media_users.csv", stringsAsFactors = FALSE)
glimpse(data)
summary(data)
head(data)
data$Date.Joined <- as.Date(data$Date.Joined)
colnames(data) <- make.names(colnames(data))
data_clean <- data %>%
select(Platform, Primary.Usage, Country, Daily.Time.Spent..min., Verified.Account) %>%
filter(!is.na(Daily.Time.Spent..min.))  # remove rows with missing time
data_clean$Verified <- ifelse(data_clean$Verified.Account == "Yes", 1, 0)
data_clean$TimeSpent_Scaled <- scale(data_clean$Daily.Time.Spent..min.)
cat("✅ Data cleaned and saved as RDS file.\n")
library(caret)
library(factoextra)
library(dplyr)
View(data_clean)
data_clean <- readRDS("../data/cleaned_users.rds")
View(data_clean)
View(data_clean)
View(data_clean)
View(data_clean)
View(data_clean)
saveRDS(data_clean, "~/Downloads/co-op/Projects/CustomerSegmentationR/data/cleaned_users.rds")
data_clean <- readRDS("~/Downloads/co-op/Projects/CustomerSegmentationR/data/cleaned_users.rds")
data_clean <- readRDS("~/Downloads/co-op/Projects/CustomerSegmentationR/data/cleaned_users.rds")
categorical <- data_clean %>%
select(Platform, Primary.Usage, Country)
dummy <- dummyVars(" ~ .", data = categorical)
dummy_data <- data.frame(predict(dummy, newdata = categorical))
features <- cbind(dummy_data,
TimeSpent = data_clean$TimeSpent_Scaled,
Verified = data_clean$Verified)
fviz_nbclust(features, kmeans, method = "wss")
set.seed(123)
k_model <- kmeans(features, centers = 4, nstart = 25)
data_clustered <- cbind(data_clean, Cluster = as.factor(k_model$cluster))
# Save full output for visualization and analysis
saveRDS(data_clustered, "~/Downloads/co-op/Projects/CustomerSegmentationR/data/clustered_users.rds")
saveRDS(data_clustered, "~/Downloads/co-op/Projects/CustomerSegmentationR/data/clustered_users.rds")
cluster_summary <- data_clustered %>%
group_by(Cluster) %>%
summarise(
Count = n(),
AvgTimeSpent = mean(Daily.Time.Spent..min.),
VerifiedRate = mean(Verified)
)
write.csv(cluster_summary, "~/Downloads/co-op/Projects/CustomerSegmentationR/data/cluster_summary.csv", row.names = FALSE)
cat("✅ K-means clustering completed and results saved.\n")
library(ggplot2)
library(factoextra)
library(dplyr)
data_clustered <- readRDS("~/Downloads/co-op/Projects/CustomerSegmentationR/data/clustered_users.rds")
categorical <- data_clustered %>%
select(Platform, Primary.Usage, Country)
dummy <- dummyVars(" ~ .", data = categorical)
dummy_data <- data.frame(predict(dummy, newdata = categorical))
features <- cbind(dummy_data,
TimeSpent = data_clustered$TimeSpent_Scaled,
Verified = data_clustered$Verified)
pca_result <- prcomp(features, scale. = TRUE)
fviz_pca_ind(pca_result,
geom.ind = "point",
col.ind = data_clustered$Cluster,
palette = "jco",
addEllipses = TRUE,
legend.title = "Cluster")
ggsave("~/Downloads/co-op/Projects/CustomerSegmentationR/output/pca_clusters.png", width = 8, height = 6)
cat("✅ PCA visualization complete.\n")
View(categorical)
View(cluster_summary)
View(data)
View(data)
View(data_clean)
View(dummy_data)
View(pca_result)
View(k_model)
View(features)
View(features)
View(dummy_data)
View(dummy)
View(data_clustered)
View(data_clean)
View(data)
View(cluster_summary)
View(categorical)
View(data)
shiny::runApp('Downloads/co-op/Projects/CustomerSegmentationR/dashboard')
runApp('Downloads/co-op/Projects/CustomerSegmentationR/dashboard')
runApp('Downloads/co-op/Projects/CustomerSegmentationR/dashboard')
runApp('Downloads/co-op/Projects/CustomerSegmentationR/dashboard')
runApp('Downloads/co-op/Projects/CustomerSegmentationR/dashboard')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='kishorelinam',
token='934811E1A5F0DE335FF9B27C0FA13E90',
secret='<SECRET>')
rsconnect::setAccountInfo(name='kishorelinam',
token='934811E1A5F0DE335FF9B27C0FA13E90',
secret='baC3vKZ5rgsK5AAWw9V23jSBnV4KEjeuxlP9q2ph')
setwd("path/to/dashboard")
Error in setwd("~/Downloads/co-op/Projects/CustomerSegmentationR/dashboard") : cannot change working directory
setwd("~/Downloads/co-op/Projects/CustomerSegmentationR/dashboard")
runApp()
getwd()
rsconnect::deployApp()
rsconnect::deployApp()
rsconnect::deployApp()
